Create a page named "Vanessa-Responses" for reviewing all user–AI conversations.

🧩 Features & Requirements:
1. **Database Setup**
   - Create a table named `vanessa_logs` with columns:
     - `id` (auto increment, primary key)
     - `thread_id` (text)
     - `user_message` (text)
     - `assistant_response` (text)
     - `created_at` (timestamp, default now)
   - Ensure that multiple messages sharing the same `thread_id` belong to one conversation group.

2. **Backend Updates**
   - Modify `openaiService.ts` (or equivalent chat logic) to:
     - Save every message exchange (thread ID, user message, and assistant response) into `vanessa_logs`.
     - Use an existing thread if active, otherwise create a new one.
   - Create new routes:
     - `GET /api/vanessa/responses`: returns all logs, grouped by `thread_id`, sorted by `created_at` (desc).
     - `GET /api/vanessa/responses/:threadId`: returns messages for a specific thread.
     - `GET /api/vanessa/search?q={keyword}`: filters results by text content (user or assistant message).

3. **Frontend — `/pages/Vanessa-Responses.tsx`**
   - Design the layout similar to the Lindy.AI dashboard:
     - **Left Sidebar:** Lists all threads by latest activity.
       - Show thread title (first user message or generated label).
       - Include search input to filter threads by message text.
       - When clicked, loads the thread’s messages into the main view.
     - **Main Panel:** Displays chat messages for the selected thread.
       - Show user messages (aligned left) and Vanessa responses (aligned right).
       - Include timestamps and thread IDs.
   - Use Tailwind CSS or Chakra UI for modern styling.

4. **UI Design Notes**
   - Add hover highlights on sidebar thread items.
   - Mark currently selected thread with a blue background.
   - Include scrollable message history in the main panel.
   - Add timestamp formatting (`toLocaleString()`).
   - Add “Requires response?” tag if the last message was from the user.
   - Add emoji/avatar for Vanessa and user messages.

5. **Optional Admin Enhancements**
   - Protect this route (`/vanessa-responses`) behind an admin check.
   - Add pagination if messages exceed 100 per thread.

✅ **Expected Outcome:**
- A fully functional page at `/vanessa-responses`.
- Conversations grouped by thread, searchable, and chronologically sorted.
- Each thread opens into a full chat view with user and Vanessa messages.
- Design inspired by the Lindy.AI chat inspector (see reference screenshot).
- Data automatically updates as new messages are logged in the database.