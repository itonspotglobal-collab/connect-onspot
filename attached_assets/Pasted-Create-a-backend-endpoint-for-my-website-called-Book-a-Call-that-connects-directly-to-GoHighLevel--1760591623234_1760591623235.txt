Create a backend endpoint for my website called “Book a Call” that connects directly to GoHighLevel (GHL) CRM using a sub-account API key.

Here are the details and requirements:

1. **Tech Stack**
   - Use Node.js with Express.
   - The site is hosted on Replit.
   - Use `fetch` or `axios` to send API requests.

2. **Functionality**
   - When a user submits a booking form (first name, last name, email, phone, and message), the backend should:
     a. Receive the form data as a POST request to `/book`.
     b. Send that data to the GoHighLevel API to create or update a contact using:
        `POST https://rest.gohighlevel.com/v1/contacts/`
     c. Use the following headers:
        ```
        Authorization: Bearer <MY_SUBACCOUNT_API_KEY>
        Content-Type: application/json
        ```
     d. Example payload:
        ```json
        {
          "firstName": "John",
          "lastName": "Doe",
          "email": "john@example.com",
          "phone": "+15551234567",
          "source": "Website Booking Form",
          "tags": ["Book a Call"]
        }
        ```

3. **Security**
   - The API key must be stored in an environment variable (e.g. `process.env.GHL_API_KEY`).
   - Do NOT expose it on the client side.

4. **Response Handling**
   - If successful (HTTP 200 or 201), return `{ success: true, message: "Contact added to GHL" }`.
   - If there’s an error, return `{ success: false, error: "Error message from GHL" }`.

5. **Optional Bonus**
   - If the response from GHL includes a `contactId`, log it to the console.
   - Prepare the backend to later expand into creating an appointment (`/v1/appointments`) using that contactId.

6. **Testing**
   - Include an example `curl` or JavaScript `fetch` command to test the `/book` endpoint locally.

7. **Frontend Integration (optional)**
   - Provide a simple HTML form with fields for first name, last name, email, and phone.
   - When submitted, it should send a POST request (using `fetch`) to `/book` with the form data in JSON.

Make sure the code is clean, commented, and uses async/await for all API calls.
